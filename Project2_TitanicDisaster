{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Project2_TitanicDisaster","provenance":[{"file_id":"1LFtdSMvvjgYYqLDAgyyh7_5OWBFC2po5","timestamp":1563592704009}],"collapsed_sections":["tv__XfRLHtBf","Wx9ciaKgyTW5","M7iLGnc4WMs3","Mw03rdzH9GnV","Q3teCO6P_PFX","xuLa3WmifOb0","5dVTHDxJv5JW"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Q6xdtJl6Fv9f","colab_type":"text"},"source":["##Project 2:THẢM HỌA ĐẮM TÀU TITANIC(HỌC CÓ GIÁM SÁT - Binary Classification)\n","----\n","Mô tả dự án: Thảm họa đắm tàu Titatic là thảm họa hàng hải lớn nhất trong lịch sử. Chuyến ra khơi đầu tiên của con tàu vào ngày 15/4/1912, Titanic đã  bị chìm sau khi va vào một tảng băng trôi, làm chết 1502 trong tổng số 2224 hành khách và thủy thủ đoàn.  \n","Một sô người may mắn thoát chết như phụ nữ, trẻ em và những người thuộc tầng lớp thượng lưu. \n","\n","![alt text](https://i.ytimg.com/vi/rs9w5bgtJC8/maxresdefault.jpg)\n","\n","Trong dự án này sẽ sử dụng các thuật toán học máy để đự đoán 1 hành khách sẽ được cứu hay không dựa vào các thông tin của hành khách. (Thuộc nhóm bài toán phân lớp nhị phân = Sống|Chết)\n","\n","\n","Yêu cầu: Dựa vào các thuộc tính của hành khách  để phân lớp hành khách này thuộc nhóm 0|Không được cứu - 1|Được cứu.\n","\n","Tập dữ liệu bao gồm:\n","\n","\n","*   Tập Train: 891 hành khách (với đầy đủ các thông tin, và thuộc tính Survial cho biết hành khách được cứu hay không)\n","*  Tập Test: 418 mẫu\n","\n","\n","  \n","  Mỗi hành khách (mẫu) bao gồm các thuộc tính:\n","  \n","\n","1.  PassengerId: ID của hành khách\n","2.  Survival: Thuộc tính cho biết hành khách được cứu hay không (ground truth) 0 = No (Không được cứu); 1 = Yes (Được cứu)\n","3.   Pclass: Loại vé tàu (Cho biết Địa vị xã hội): 1 - Hạng nhất; 2 - Hạng hai; 3 - Hạng 3\n","4.   Name: Tên của hành khách\n","5.  Sex: Giới tính (Male/Female)\n","6. Age: Tuổi (Tính theo năm)\n","7. SibSp: Số lượng anh chị em/bạn đời trên khoang tàu \n","8. Parch: Số lượng cha mẹ/con cái trên khoang tàu\n","9. Ticket: Số hiệu vé\n","10. Fare: Phí hành khách\n","11. Cabin: Số hiệu cabin\n","12. Embarked: Cổng lên tàu (C = Cherourg; Q = Queenstown, S=Southampton)\n","\n","----\n","dangvannam@Department of Computer Science@FIT-HUMG"]},{"cell_type":"code","metadata":{"id":"zE1IfL2iFmT4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"executionInfo":{"status":"ok","timestamp":1595838981021,"user_tz":-420,"elapsed":2336,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhuAjjEz-tYvqqEOaxeOXVPZ5IK-hH05xHoWhkBbA=s64","userId":"08158656345609809641"}},"outputId":"94b95132-c7cf-41c5-d0e1-84c93606263b"},"source":["#Gọi các thư viện sử dụng cho Project:\n","\n","# data analysis and wrangling\n","import pandas as pd\n","import numpy as np\n","import random as rnd\n","\n","# visualization\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"tv__XfRLHtBf","colab_type":"text"},"source":["###1) Tải tập dữ liệu Train - Test\n","---\n","\n","\n","*   Train: 891 mẫu (Một số thông tin về tập Train: tổng số 891 - chiếm 40% số lượng hành khách thực tế trên tàu (2.224), Gần 30% hành khách có anh chị em và/hoặc vợ, chồng trên tàu; Giá vé thay đổi đáng kể <1% hành khách trả cao tới 512USD; Số lượng hành khách cao tuổi <1% trong độ tuổi 65-80 tuổi; 65% hành khách là Nam (577/891); bao gồm 12 thuộc tính như ở phần mô tả bài toán)\n","\n","\n","\n","\n","*   Test: 418 mẫu (bao gồm 11 thuộc tính (Ko chứa thuộc tính Survival))\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"3-OPO01Vp1L2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":121},"executionInfo":{"status":"ok","timestamp":1574666864312,"user_tz":-420,"elapsed":46003,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAqrORj-P8fXkEOcO3AzrgZkp6R-z4lJAIegEvJkw=s64","userId":"08158656345609809641"}},"outputId":"6efd436c-7874-4142-af2f-739deba61576"},"source":["#Mount tới google drive để tải tập dữ liệu\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","path_train =\"/content/drive/My Drive/Colab Notebooks/10Project/Data_titanic/train.csv\"\n","path_test = \"/content/drive/My Drive/Colab Notebooks/10Project/Data_titanic/test.csv\""],"execution_count":null,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rs4lgi9UHFGS","colab_type":"code","colab":{}},"source":["#Đọc dữ liệu tập train và test từ file csv:\n","\n","train_df = pd.read_csv(path_train)\n","test_df = pd.read_csv(path_test)\n","combine = [train_df, test_df]\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Axza_dYBr0ZZ","colab_type":"code","colab":{}},"source":["print(\"Danh sách cột dữ liệu trong DataFrame: Tập Train\")\n","print(train_df.columns.values)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BrpIQxdMvl1r","colab_type":"code","colab":{}},"source":["print(\"Danh sách cột dữ liệu trong DataFrame: Tập Test\")\n","print(test_df.columns.values)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bXEDkhGjsTAE","colab_type":"code","colab":{}},"source":["#Hiển thị danh sách thông tin 10 hành khách đầu tiên\n","train_df[:10]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qiGDtg4w7Gf5","colab_type":"code","colab":{}},"source":["#Hiển thị dữ liệu tập Test:\n","test_df[:10]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Wx9ciaKgyTW5","colab_type":"text"},"source":["###2) Phân tích số liệu tập Train"]},{"cell_type":"code","metadata":{"id":"e-a5UxV0NM7B","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":622},"executionInfo":{"status":"ok","timestamp":1564106539406,"user_tz":-420,"elapsed":810,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"3bc8766b-aff6-44b4-8f8b-07a6aa0b2fe4"},"source":["#Kiểm tra dữ liệu tập Train - Test\n","\n","print(train_df.info())\n","print(\"-\"*40)\n","print(test_df.info())\n","\n","##Tập train: Các thuộc tính ko đủ: Age(714) - Cabin(204) - Embarked(889)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n","PassengerId    891 non-null int64\n","Survived       891 non-null int64\n","Pclass         891 non-null int64\n","Name           891 non-null object\n","Sex            891 non-null object\n","Age            714 non-null float64\n","SibSp          891 non-null int64\n","Parch          891 non-null int64\n","Ticket         891 non-null object\n","Fare           891 non-null float64\n","Cabin          204 non-null object\n","Embarked       889 non-null object\n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.6+ KB\n","None\n","----------------------------------------\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 0 to 417\n","Data columns (total 11 columns):\n","PassengerId    418 non-null int64\n","Pclass         418 non-null int64\n","Name           418 non-null object\n","Sex            418 non-null object\n","Age            332 non-null float64\n","SibSp          418 non-null int64\n","Parch          418 non-null int64\n","Ticket         418 non-null object\n","Fare           417 non-null float64\n","Cabin          91 non-null object\n","Embarked       418 non-null object\n","dtypes: float64(2), int64(4), object(5)\n","memory usage: 36.0+ KB\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-Cu3ejE6A_5V","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":521},"executionInfo":{"status":"ok","timestamp":1564106678101,"user_tz":-420,"elapsed":789,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"535ff17b-f6f0-4e2f-bd0e-1d03a24d28b3"},"source":["print('Số lượng missing data trong tập Train: \\n')\n","print(train_df.isnull().sum())\n","print(\"------------------------------------------\")\n","print('Số lượng missing data trong tập Test: \\n')\n","print(test_df.isnull().sum())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Số lượng missing data trong tập Train: \n","\n","PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age            177\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          687\n","Embarked         2\n","dtype: int64\n","------------------------------------------\n","Số lượng missing data trong tập Test: \n","\n","PassengerId      0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age             86\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             1\n","Cabin          327\n","Embarked         0\n","dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EUMXaDDpvrzo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":284},"executionInfo":{"status":"ok","timestamp":1563964663078,"user_tz":-420,"elapsed":1605,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"96233241-19c7-457c-af7a-217158d293fa"},"source":["#Phân tích số liệu tập Train\n","train_df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       PassengerId    Survived      Pclass  ...       SibSp       Parch        Fare\n","count   891.000000  891.000000  891.000000  ...  891.000000  891.000000  891.000000\n","mean    446.000000    0.383838    2.308642  ...    0.523008    0.381594   32.204208\n","std     257.353842    0.486592    0.836071  ...    1.102743    0.806057   49.693429\n","min       1.000000    0.000000    1.000000  ...    0.000000    0.000000    0.000000\n","25%     223.500000    0.000000    2.000000  ...    0.000000    0.000000    7.910400\n","50%     446.000000    0.000000    3.000000  ...    0.000000    0.000000   14.454200\n","75%     668.500000    1.000000    3.000000  ...    1.000000    0.000000   31.000000\n","max     891.000000    1.000000    3.000000  ...    8.000000    6.000000  512.329200\n","\n","[8 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"YdtgDmQSwri7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1563964674116,"user_tz":-420,"elapsed":1583,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"da693597-974f-4a76-dd54-097f76f2ba3d"},"source":["#Thông kê tập dữ liệu Train các thuộc tính có dtype: Object\n","train_df.describe(include=['O'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Ticket</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>204</td>\n","      <td>889</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>891</td>\n","      <td>2</td>\n","      <td>681</td>\n","      <td>147</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>Ostby, Mr. Engelhart Cornelius</td>\n","      <td>male</td>\n","      <td>1601</td>\n","      <td>C23 C25 C27</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>1</td>\n","      <td>577</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>644</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                  Name   Sex Ticket        Cabin Embarked\n","count                              891   891    891          204      889\n","unique                             891     2    681          147        3\n","top     Ostby, Mr. Engelhart Cornelius  male   1601  C23 C25 C27        S\n","freq                                 1   577      7            4      644"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"cCtMTSmLL7MN","colab_type":"text"},"source":["Phân tích các thuộc tính chủ chốt của dữ liệu hành khách ảnh hưởng tới survived:\n","\n","Phân tích nhanh mối tương quan giữa các thuộc tính chủ chốt, có thể thực hiện với các thuộc tính không có bất kỳ giá trị trống nào. \n","\n","Thực hiện với các thuộc tính kiểu Categorical (Sex), thứ tự - Ordinal (Pclass), rời rạc - Discrete (Sibsp, Parch)\n","\n","* Pclass: có mối tương quan đáng kể (>0.5) của Pclass = 1 và được cứu sống (Survived)\n","* Sex: = female có tỷ lệ được cứu sống rất cao (74%)\n"]},{"cell_type":"code","metadata":{"id":"rVbvOPcZymCK","colab_type":"code","colab":{}},"source":["#Phân tích các đặc tính chủ chốt của tập dữ liệu Train\n","#Đặc tính Hạng vé tàu - Pclass:\n","\n","train_df[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"csYjExDqy6KA","colab_type":"code","colab":{}},"source":["#Đặc tính Giới tính - Sex:\n","train_df[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QQICSTXOy-Zi","colab_type":"code","colab":{}},"source":["\n","train_df[[\"SibSp\", \"Survived\"]].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cVCijTIxzDUW","colab_type":"code","colab":{}},"source":["train_df[[\"Parch\", \"Survived\"]].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"M7iLGnc4WMs3","colab_type":"text"},"source":["###3) Trực quan hóa tập dữ liệu train\n","---\n","Thực hiện phân tích tập dữ liệu Train sử dụng phương pháp trực quan hóa dữ liệu, thu được những nhận xét như sau:\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"s31hfpnq1DZB","colab_type":"text"},"source":["SỰ TƯƠNG QUAN CỦA CÁC THUỘC TÍNH SỐ (age với Survived)\n","\n","\n","Quan sát dữ liệu Tuổi:\n","\n","\n","*   Trẻ em (Tuổi <=4) có tỷ lệ được cứu cao\n","*   Các hành khách già nhất (Tuổi = 80) đều được cứu\n","*   Một lượng lớn hành khách trong độ tuổi từ 15 - 25 không được cứu\n","*  Hầu hết hành khách trong độ tuổi từ 15 - 35\n","\n","Xem xét:\n","\n","*  Cho thuộc tính Age vào mô hình huấn luyện\n","*  Xử lý một số dữ liệu missing của thuộc tính age\n","*  Nhóm các độ tuôi theo từng group\n"]},{"cell_type":"code","metadata":{"id":"bep8JrxxNgR_","colab_type":"code","colab":{}},"source":["g = sns.FacetGrid(train_df, col='Survived')\n","g.map(plt.hist, 'Age', bins=40)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-MAQ6Csz4D9k","colab_type":"text"},"source":["MỐI TƯƠNG QUAN GIỮA CÁC THUỘC TÍNH KIỂU SỐ VÀ THỨ TỰ (Pclass, Age với Survived):\n","\n","Kết hợp nhiều thuộc tính khác nhau để xác định mối tương quan bằng cách sử dụng một biểu đồ đơn. Điều này có thể được thực hiện với các thuộc tính có kiểu dữ liệu số số.\n","\n","Quan sát dữ liệu:\n","\n","* Hầu hết hành khách có (Pclass) Vé tàu hạng 3, tuy nhiên hầu hết những hành khách này đều không được cứu.\n","* Các hành khách trẻ em có vé hạng 2 và hạng 3 hầu hết được cứu.\n","* Hầu hết hành khách có vé hạng 1 đều được cứu.\n","* Phân bố độ tuổi của hành khác khác nhau với các Pclass khác nhau.\n","\n","Xem xét: \n","* Cho thuộc tính Pclass vào mô hình huấn luyện"]},{"cell_type":"code","metadata":{"id":"1Rg607PxOPsM","colab_type":"code","colab":{}},"source":["# grid = sns.FacetGrid(train_df, col='Pclass', hue='Survived')\n","grid = sns.FacetGrid(train_df, col='Survived', row='Pclass', size=2.2, aspect=1.6)\n","grid.map(plt.hist, 'Age', alpha=.5, bins=20)\n","grid.add_legend();\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wIly40IfFw30","colab_type":"text"},"source":["SỰ TƯƠNG QUAN CỦA CÁC THUỘC TÍNH (Sex, Pclass, Embarked với Survived).\n","\n","Quan sát dữ liệu:\n","* Các hành khách nữ có tỷ lệ cứu sống cao hơn hành khách nam.\n","* Loại trừ trường hợp thuộc tính Embarked = C có tỷ lệ hành khách nam được cứu sống cao hơn, còn lại các trường hợp khác của thuộc tính Embarked, tỷ lệ nữ được cứu đều cao hơn. Điều này có thể là một sự tương quan giữa thuộc tính Pclass và thuộc tính Embarked, và trở lại Pclass với Survived, không nhất thiết tương quan trực tiếp giữa thuộc tính Embarked và Survived.\n","* Hành khách nam có tỷ lệ được cứu sống cao hơn trong Pclass = 3 khi so sánh với Pclass = 2 với các cảng C và Q.\n","* Vị trí cảng lên tàu có tỷ lệ được cứu sống khác nhau cho Pclass = 3 và đối với hành khách là nam.\n","\n","Xem xét:\n","* Bổ sung thuộc tính Sex vào mô hình huấn luyện.\n","* Hoàn chỉnh và bổ sung thuộc tính Embarked vào mô hình huấn luyện\n","\n"]},{"cell_type":"code","metadata":{"id":"ADUo_Z5yOiy7","colab_type":"code","colab":{}},"source":["# grid = sns.FacetGrid(train_df, col='Embarked')\n","grid = sns.FacetGrid(train_df, row='Embarked', size=2.2, aspect=1.6)\n","grid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\n","grid.add_legend()\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"557fg8KPVXNX","colab_type":"text"},"source":["SỰ TƯƠNG QUAN CỦA CÁC THUỘC TÍNH Categorical và numerical (Fare, Embarked, Sex với Survived)\n","\n","Quan sát dữ liệu: \n","* Các hành khách trả tiền vé tàu cao hơn có tỷ lệ được cứu sống cao hơn.\n","* Cảng lên tàu của hành khách có sự tương quan với tỷ lệ được cứu sống.\n","\n","Xem xét:\n","*  Cân nhắc nhóm thuộc tính Fare thành từng khoảng.\n"]},{"cell_type":"code","metadata":{"id":"SENNuEm5O7YB","colab_type":"code","colab":{}},"source":["# grid = sns.FacetGrid(train_df, col='Embarked', hue='Survived', palette={0: 'k', 1: 'w'})\n","grid = sns.FacetGrid(train_df, row='Embarked', col='Survived', size=2.2, aspect=1.6)\n","grid.map(sns.barplot, 'Sex', 'Fare', alpha=.5, ci=None)\n","grid.add_legend()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ydl01Pg-WWPR","colab_type":"text"},"source":["###3) Tiền xử lý dữ liệu"]},{"cell_type":"markdown","metadata":{"id":"Mw03rdzH9GnV","colab_type":"text"},"source":["#### 3.1) Loại bỏ các thuộc tính không sử dụng cho mô hình\n","---\n","Loại bỏ 2 thuộc tính **Ticket, Cabin** không tham gia vào mô hình huấn luyện trong file dữ liệu  Train/Test."]},{"cell_type":"code","metadata":{"id":"2VT23WtSPMmj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":118},"executionInfo":{"status":"ok","timestamp":1564019213950,"user_tz":-420,"elapsed":778,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"6081e72d-0e4b-4c37-cadd-ddce56c3b22d"},"source":["\n","print(\"Dữ liệu trước khi xử lý:\")\n","print(\"Tập Train:\", train_df.shape)\n","print(\"Tập Test:\",test_df.shape)\n","\n","\n","train_df1 = train_df.drop(['Ticket', 'Cabin'], axis=1)\n","test_df1 = test_df.drop(['Ticket', 'Cabin'], axis=1)\n","combine1 = [train_df1, test_df1]\n","\n","print(\"Dữ liệu xau khi xử lý:\")\n","print(\"Tập Train:\", train_df1.shape)\n","print(\"Tập Test:\",test_df1.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Dữ liệu trước khi xử lý:\n","Tập Train: (891, 12)\n","Tập Test: (418, 11)\n","Dữ liệu xau khi xử lý:\n","Tập Train: (891, 10)\n","Tập Test: (418, 9)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2G4Gndo_AFG0","colab_type":"code","colab":{}},"source":["train_df1[:10]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TZtCqY9XAeez","colab_type":"code","colab":{}},"source":["train_df1.count()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Q3teCO6P_PFX","colab_type":"text"},"source":["####3.2) Bổ sung thêm thuộc tính mới từ thuộc tính đã có trong tập dữ liệu\n","----\n","Trong đoạn mã dưới đây, chúng ta sẽ trích xuất thêm thuộc tính \"Title\" bằng cách sử dụng các biểu thức thông thường. Mẫu RegEx(\\w+\\.) phù hợp với từ đầu tiên kết thúc bằng ký tự dấu chấm trong thuộc tính \"Name\".\n","\n","Khi thể hiện thông tin các thuộc tính Title, Age và Survived, chúng ta chú ý các quan sát sau:\n","* Hầu hết các nhóm tuổi chính xác, ví dụ: title = \"Master\" có độ tuổi trung bình 5 tuổi.\n","* "]},{"cell_type":"code","metadata":{"id":"3YUoIaVEQCgN","colab_type":"code","colab":{}},"source":["#Cắt chuỗi đầu tiên sau dấu chấm trong thuộc tính Name cho sang thuộc tính mới Title của tập dữ liệu Train. \n","for dataset in combine1:\n","    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n","\n","pd.crosstab(train_df1['Title'], train_df1['Sex'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4N7Qmzgua5Xx","colab_type":"code","colab":{}},"source":["train_df1[240:250]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_-g3GlLR-Pxq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564019243827,"user_tz":-420,"elapsed":900,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"4318e2fc-f8a5-44aa-d0b7-6359340f41d2"},"source":["#Thay thế nhiều giá trị của thuộc tính Title bằng một cái tên phổ biến hơn hoặc phân loại chúng là Rate\n","\n","for dataset in combine1:\n","    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\n"," \t'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n","\n","    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\n","    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n","    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')\n","    \n","train_df1[['Title', 'Survived']].groupby(['Title'], as_index=False).mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Title</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Master</td>\n","      <td>0.575000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Miss</td>\n","      <td>0.702703</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mr</td>\n","      <td>0.156673</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mrs</td>\n","      <td>0.793651</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Rare</td>\n","      <td>0.347826</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Title  Survived\n","0  Master  0.575000\n","1    Miss  0.702703\n","2      Mr  0.156673\n","3     Mrs  0.793651\n","4    Rare  0.347826"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"z8fTElPbbwSJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1563964740045,"user_tz":-420,"elapsed":813,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"d628bc5c-6b9f-4b4b-ea15-4330ae9853a8"},"source":["train_df1[240:250]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>240</th>\n","      <td>241</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Zabour, Miss. Thamine</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>14.4542</td>\n","      <td>C</td>\n","      <td>Miss</td>\n","    </tr>\n","    <tr>\n","      <th>241</th>\n","      <td>242</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Murphy, Miss. Katherine \"Kate\"</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>15.5000</td>\n","      <td>Q</td>\n","      <td>Miss</td>\n","    </tr>\n","    <tr>\n","      <th>242</th>\n","      <td>243</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Coleridge, Mr. Reginald Charles</td>\n","      <td>male</td>\n","      <td>29.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10.5000</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>243</th>\n","      <td>244</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Maenpaa, Mr. Matti Alexanteri</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.1250</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>245</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Attalah, Mr. Sleiman</td>\n","      <td>male</td>\n","      <td>30.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2250</td>\n","      <td>C</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>245</th>\n","      <td>246</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Minahan, Dr. William Edward</td>\n","      <td>male</td>\n","      <td>44.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>90.0000</td>\n","      <td>Q</td>\n","      <td>Rare</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>247</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Lindahl, Miss. Agda Thorilda Viktoria</td>\n","      <td>female</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7750</td>\n","      <td>S</td>\n","      <td>Miss</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>248</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Hamalainen, Mrs. William (Anna)</td>\n","      <td>female</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>14.5000</td>\n","      <td>S</td>\n","      <td>Mrs</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>249</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Beckwith, Mr. Richard Leonard</td>\n","      <td>male</td>\n","      <td>37.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>52.5542</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>249</th>\n","      <td>250</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Carter, Rev. Ernest Courtenay</td>\n","      <td>male</td>\n","      <td>54.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>26.0000</td>\n","      <td>S</td>\n","      <td>Rare</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     PassengerId  Survived  Pclass  ...     Fare Embarked  Title\n","240          241         0       3  ...  14.4542        C   Miss\n","241          242         1       3  ...  15.5000        Q   Miss\n","242          243         0       2  ...  10.5000        S     Mr\n","243          244         0       3  ...   7.1250        S     Mr\n","244          245         0       3  ...   7.2250        C     Mr\n","245          246         0       1  ...  90.0000        Q   Rare\n","246          247         0       3  ...   7.7750        S   Miss\n","247          248         1       2  ...  14.5000        S    Mrs\n","248          249         1       1  ...  52.5542        S     Mr\n","249          250         0       2  ...  26.0000        S   Rare\n","\n","[10 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"5TjEC9zTev85","colab_type":"text"},"source":["Thực hiện xóa thuộc tính ko sử dụng khỏi tập dữ liệu \n","* Tập train: Xóa thuộc tính PassengerID và Name\n","* Tập Test: Xóa thuộc tính Name"]},{"cell_type":"code","metadata":{"id":"8GweJYRwBXIc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1564019266098,"user_tz":-420,"elapsed":745,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"d1e5749e-edbc-404e-d611-14d0b171aad6"},"source":["#Loại bỏ thuộc tính Nam và PassengerID ra khỏi file dữ liệu\n","\n","train_df2 = train_df1.drop(['Name', 'PassengerId'], axis=1)\n","test_df2 = test_df1.drop(['Name'], axis=1)\n","combine2 = [train_df2, test_df2]\n","\n","\n","print(\"Dữ liệu xau khi xử lý Bước 2:\")\n","print(\"Tập Train:\", train_df2.shape)\n","print(\"Tập Test:\",test_df2.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Dữ liệu xau khi xử lý Bước 2:\n","Tập Train: (891, 9)\n","Tập Test: (418, 9)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"E3bSnoG5CBzF","colab_type":"code","colab":{}},"source":["train_df2[:10]\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vIFZDH4zEgWr","colab_type":"code","colab":{}},"source":["test_df2[:10]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xuLa3WmifOb0","colab_type":"text"},"source":["#### 3.4) Chuyển đổi dữ liệu thuộc tính sang dạng số\n","----\n","Một số thuộc tính của tập dữ liệu không phải dữ liệu số, trong bước này sẽ thực hiện chuyển đổi các dữ liệu này về dạng số để thuận lợi cho việc đưa vào mô hình huấn luyện.\n","\n","Các thuộc tính cần chuyển đổi bao gồm:\n","* Title - Sex - Embarked"]},{"cell_type":"code","metadata":{"id":"6ONeQLVye6o2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564019271138,"user_tz":-420,"elapsed":738,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"315ec0de-dedf-4c44-ac4e-d3234ba47244"},"source":["#Chuyển đổi thuộc tính Sex về dạng số nguyên (int)\n","# trong đó: Female = 1; Male = 0\n","\n","for dataset in combine2:\n","    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n","\n","#Hiển thị dữ liệu 5 mẫu đầu tiên trong tập dữ liệu Train sau khi đã chuyển đổi.\n","train_df2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>Mrs</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Miss</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>Mrs</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex   Age  SibSp  Parch     Fare Embarked Title\n","0         0       3    0  22.0      1      0   7.2500        S    Mr\n","1         1       1    1  38.0      1      0  71.2833        C   Mrs\n","2         1       3    1  26.0      0      0   7.9250        S  Miss\n","3         1       1    1  35.0      1      0  53.1000        S   Mrs\n","4         0       3    0  35.0      0      0   8.0500        S    Mr"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"spU1oIEYgtPw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564019274995,"user_tz":-420,"elapsed":811,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"ec0630ca-431f-4559-c1f9-202b3e8dcddf"},"source":["#Chuyển đổi thuộc tính Embarked về dạng số nguyên (int)\n","# Trong đó: S = 0, C = 1, Q = 2\n","\n","for dataset in combine2:\n","    dataset['Embarked'] = dataset['Embarked'].dropna().map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\n","    #dataset['Embarked'] = dataset['Embarked'].astype(int)\n","\n","train_df2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0.0</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1.0</td>\n","      <td>Mrs</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>0.0</td>\n","      <td>Miss</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>0.0</td>\n","      <td>Mrs</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>Mr</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked Title\n","0         0       3    0  22.0      1      0   7.2500       0.0    Mr\n","1         1       1    1  38.0      1      0  71.2833       1.0   Mrs\n","2         1       3    1  26.0      0      0   7.9250       0.0  Miss\n","3         1       1    1  35.0      1      0  53.1000       0.0   Mrs\n","4         0       3    0  35.0      0      0   8.0500       0.0    Mr"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"YN3n7Gt1_kmh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564019279827,"user_tz":-420,"elapsed":722,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"8881e404-4d55-426f-b7b3-82a2a8da688e"},"source":["#Chuyển đổi dữ liệu thuộc tính Title:\n","#chuyển sang dạng số, với các giá trị tương ứng (1, 2, 3, 4, 5)\n","title_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Rare\": 5}\n","for dataset in combine2:\n","    dataset['Title'] = dataset['Title'].map(title_mapping).astype(int)\n","    dataset['Title'] = dataset['Title'].fillna(0)\n","\n","\n","train_df2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  Title\n","0         0       3    0  22.0      1      0   7.2500       0.0      1\n","1         1       1    1  38.0      1      0  71.2833       1.0      3\n","2         1       3    1  26.0      0      0   7.9250       0.0      2\n","3         1       1    1  35.0      1      0  53.1000       0.0      3\n","4         0       3    0  35.0      0      0   8.0500       0.0      1"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"iyNx4jdlfV11","colab_type":"code","colab":{}},"source":["#KẾT THÚC XỬ LÝ CHUYỂN ĐỔI SANG DỮ LIỆU SỐ\n","train3=train_df2\n","test3 = test_df2\n","combine3 = [train3,test3]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ekBSqmIkfiaT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1563964817791,"user_tz":-420,"elapsed":760,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"f7a788d5-e725-47e3-8ed7-51af502a716f"},"source":["train_df2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  Title\n","0         0       3    0  22.0      1      0   7.2500       0.0      1\n","1         1       1    1  38.0      1      0  71.2833       1.0      3\n","2         1       3    1  26.0      0      0   7.9250       0.0      2\n","3         1       1    1  35.0      1      0  53.1000       0.0      3\n","4         0       3    0  35.0      0      0   8.0500       0.0      1"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"Dy_l1MMLiXUB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1563964822520,"user_tz":-420,"elapsed":783,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"f49f2f82-3fda-4d0a-95d4-411fb6ff5d27"},"source":["train3.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  Title\n","0         0       3    0  22.0      1      0   7.2500       0.0      1\n","1         1       1    1  38.0      1      0  71.2833       1.0      3\n","2         1       3    1  26.0      0      0   7.9250       0.0      2\n","3         1       1    1  35.0      1      0  53.1000       0.0      3\n","4         0       3    0  35.0      0      0   8.0500       0.0      1"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"markdown","metadata":{"id":"qPvdaGBJh8K1","colab_type":"text"},"source":["#### 3.5) Xử lý dữ liệu mất mát (Missing data)\n","----\n","Trong tập dữ liệu có một số giá trị mất mát hoặc có giá trị null, chúng ta cần phải xử lý các dữ liệu này trước khi cho vào mô hình huấn luyện.\n"]},{"cell_type":"markdown","metadata":{"id":"kCh7z_1qiZxY","colab_type":"text"},"source":["#####  3.5.1) Xử lý dữ liệu mất mát của thuộc tính Age\n","\n","Có một sự tương quan giữa thuộc tính Age, Sex và Pclass. bởi vậy chúng ta sẽ ước chừng giá trị Age tại các vị trí thiếu sử dụng các giá trị trung bình của thuộc tính Age theo các tập của sự kết hợp giữa thuộc tính Pclass và Sex. như, trung bình Age của Pclass = 1 và Sex = 0, Pclass = 1 và Sex = 1...vv."]},{"cell_type":"code","metadata":{"id":"iAxHyaOiiY_6","colab_type":"code","colab":{}},"source":["grid = sns.FacetGrid(train_df2, row='Pclass', col='Sex', size=2.2, aspect=1.6)\n","grid.map(plt.hist, 'Age', alpha=.5, bins=20)\n","grid.add_legend()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"H5OVvOkvP-yj","colab_type":"text"},"source":["##### A. Thay thế các giá trị null bằng giá trị trung bình\n","---\n","\n","Xây dựng mảng guess_ages (2 (giới tính) x 3 (pclass)) lưu trữ tuổi trung bình của hành khách theo giới tính và pclass. \n"," \n"," Sau đó sẽ thay thế các giá trị null trong thuộc tính Age của các hành khách này dựa vào tuổi trung bình tương ứng với các hành khách có cùng chung thuộc tính Sex và Pclass với hành khách có tuổi null đó.\n"," \n","* sex = 0, pclass = 1, có độ tuổi trung bình lưu tại vị trí guess_ages[0,0]\n"," \n","* sex = 0, pclass = 2, có độ tuổi trung bình lưu tại vị trí guess_ages[0,1]\n"," \n","* sex = 0, pclass = 3, có độ tuổi trung bình lưu tại vị trí guess_ages[0,2]\n"," \n","* sex = 1, pclass = 1, có độ tuổi trung bình lưu tại vị trí guess_ages[1,0]\n"," \n","* sex = 1, pclass = 2, có độ tuổi trung bình lưu tại vị trí guess_ages[1,1]\n"," \n","* sex = 1, pclass = 3, có độ tuổi trung bình lưu tại vị trí guess_ages[1,2]\n"," "]},{"cell_type":"code","metadata":{"id":"Y8E0q5e5FDwU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1564019293315,"user_tz":-420,"elapsed":581,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"2371c0f7-1dfb-4072-fadd-71f703173bcb"},"source":["#Tập Train\n","#Khởi tạo mảng Empty, chứa các giá trị dự đoán tuổi \n","#dựa trên sự kết hợp của thuộc tính Pclass và Sex\n","\n","\n","guess_ages_train = np.zeros((2,3))\n","\n","guess_ages_train"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0.],\n","       [0., 0., 0.]])"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"Nn0L86ZRN_jP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1564019296701,"user_tz":-420,"elapsed":703,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"9e05d1be-864a-4305-c3d5-a8abeda4c54b"},"source":["#Thực hiện tính toán các giá trị trung bình của Age dựa vào Sex và Pclass.\n","for i in range(0, 2):\n","   for j in range(0, 3):\n","            guess_df = train3[(train3['Sex'] == i) & (train3['Pclass'] == j+1)]['Age'].dropna()\n","            age_guess = guess_df.median()\n","           \n","            guess_ages_train[i,j] = int(age_guess/0.5 + 0.5)*0.5\n","           # print(i,'--',j, age_guess,'--', guess_ages_train[i,j])\n","\n","print(\"Mảng các giá trị tuổi trung bình theo Sex và Pclass của tập Train: \")\n","print(guess_ages_train)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mảng các giá trị tuổi trung bình theo Sex và Pclass của tập Train: \n","[[40.  30.  25. ]\n"," [35.  28.  21.5]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p9jcafPRRSn6","colab_type":"code","colab":{}},"source":["#Thực hiện thay thế các giá trị null của thuộc tính Age bằng giá trị trung bình tương ứng với Sex và Pclass đã tính ở trên\n","\n","for i in range(0, 2):\n","   for j in range(0, 3):\n","       train3.loc[ (train3.Age.isnull()) & (train3.Sex == i) & (train3.Pclass == j+1),\\\n","                    'Age'] = guess_ages_train[i,j]\n","train3['Age'] = train3['Age'].astype(int)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"11XuPoEdKczC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1564019356822,"user_tz":-420,"elapsed":732,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"a804dcde-b441-4dfe-b9f2-291fad319c7a"},"source":["#Dữ liệu tập train trước khi xử lý missing thuộc tính Tuổi\n","#Chỉ có 714 hành khách có dữ liệu Age, còn 891 - 714 = 177 hành khách không có dữ liệu Age.\n","\n","train_df1[[\"Sex\",\"Age\"]].count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sex    891\n","Age    714\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"nXsIDP-DK48k","colab_type":"code","colab":{}},"source":["#Dữ liệu tập train sau khi đã xử lý các dữ liệu missing của thuộc tính Age\n","train3.count()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6QT8o72PLB23","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1564019428360,"user_tz":-420,"elapsed":740,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"256ee621-1701-4952-f98d-68ff62faec62"},"source":["#Quan sát dữ liệu trước khi xử lý missing thuộc tính Age\n","#Tại các vị trí 31, 32 và 36 ko có dữ liệu Age\n","\n","train_df1[30:40]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>30</th>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Uruchurtu, Don. Manuel E</td>\n","      <td>male</td>\n","      <td>40.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27.7208</td>\n","      <td>C</td>\n","      <td>Rare</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>32</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Spencer, Mrs. William Augustus (Marie Eugenie)</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>146.5208</td>\n","      <td>C</td>\n","      <td>Mrs</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Glynn, Miss. Mary Agatha</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","      <td>Q</td>\n","      <td>Miss</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>34</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Wheadon, Mr. Edward H</td>\n","      <td>male</td>\n","      <td>66.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10.5000</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Meyer, Mr. Edgar Joseph</td>\n","      <td>male</td>\n","      <td>28.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>82.1708</td>\n","      <td>C</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Holverson, Mr. Alexander Oskar</td>\n","      <td>male</td>\n","      <td>42.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>52.0000</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Mamee, Mr. Hanna</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2292</td>\n","      <td>C</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Cann, Mr. Ernest Charles</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Mr</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>39</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Vander Planke, Miss. Augusta Maria</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>18.0000</td>\n","      <td>S</td>\n","      <td>Miss</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Nicola-Yarred, Miss. Jamila</td>\n","      <td>female</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11.2417</td>\n","      <td>C</td>\n","      <td>Miss</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    PassengerId  Survived  Pclass  ...      Fare Embarked  Title\n","30           31         0       1  ...   27.7208        C   Rare\n","31           32         1       1  ...  146.5208        C    Mrs\n","32           33         1       3  ...    7.7500        Q   Miss\n","33           34         0       2  ...   10.5000        S     Mr\n","34           35         0       1  ...   82.1708        C     Mr\n","35           36         0       1  ...   52.0000        S     Mr\n","36           37         1       3  ...    7.2292        C     Mr\n","37           38         0       3  ...    8.0500        S     Mr\n","38           39         0       3  ...   18.0000        S   Miss\n","39           40         1       3  ...   11.2417        C   Miss\n","\n","[10 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"1nMTHY0zLHlE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1564019418588,"user_tz":-420,"elapsed":855,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"5d217dc2-ebcc-457d-864a-e344362e0bf1"},"source":["#Quan sát dữ liệu sau khi xử lý missing thuộc tính Age\n","# Tại vị trí 31: có Sex = 1, Pclass = 1, sẽ thay thế giá trị missing bằng giá trị trong mảng guess_ages_train[1,0] = 35\n","# Tại vị trí 32: có Sex = 1, Pclass = 3, sẽ thay thế giá trị missing bằng giá trị trong mảng guess_ages_train[1,2] = 21\n","# Tại vị trí 31: có Sex = 0, Pclass = 3, sẽ thay thế giá trị missing bằng giá trị trong mảng guess_ages_train[0,2] = 25\n","\n","train3[30:40]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>30</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27.7208</td>\n","      <td>1.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>146.5208</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>66</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10.5000</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>28</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>82.1708</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>42</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>52.0000</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2292</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>21</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>18.0000</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11.2417</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Survived  Pclass  Sex  Age  SibSp  Parch      Fare  Embarked  Title\n","30         0       1    0   40      0      0   27.7208       1.0      5\n","31         1       1    1   35      1      0  146.5208       1.0      3\n","32         1       3    1   21      0      0    7.7500       2.0      2\n","33         0       2    0   66      0      0   10.5000       0.0      1\n","34         0       1    0   28      1      0   82.1708       1.0      1\n","35         0       1    0   42      1      0   52.0000       0.0      1\n","36         1       3    0   25      0      0    7.2292       1.0      1\n","37         0       3    0   21      0      0    8.0500       0.0      1\n","38         0       3    1   18      2      0   18.0000       0.0      2\n","39         1       3    1   14      1      0   11.2417       1.0      2"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"sPeKmxSgUWiI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1564019513393,"user_tz":-420,"elapsed":785,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"90a37bf3-c298-46fc-826d-d8f7b0280270"},"source":["# XỬ LÝ DỮ LIỆU MINSSING AGE TƯƠNG TỰ CHO TẬP DỮ LIỆU TEST\n","#Thực hiện tính toán các giá trị trung bình của Age dựa vào Sex và Pclass.\n","guess_ages_test = np.zeros((2,3))\n","\n","for i in range(0, 2):\n","   for j in range(0, 3):\n","            guess_df = test3[(test3['Sex'] == i) & (test3['Pclass'] == j+1)]['Age'].dropna()\n","            age_guess = guess_df.median()\n","           \n","            guess_ages_test[i,j] = int(age_guess/0.5 + 0.5)*0.5\n","           # print(i,'--',j, age_guess,'--', guess_ages_train[i,j])\n","\n","print(\"Mảng các giá trị tuổi trung bình theo Sex và Pclass của tập Test: \")\n","print(guess_ages_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mảng các giá trị tuổi trung bình theo Sex và Pclass của tập Test: \n","[[42. 28. 24.]\n"," [41. 24. 22.]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OJOgrhtmUWpz","colab_type":"code","colab":{}},"source":["#Thực hiện thay thế các giá trị null của thuộc tính Age bằng giá trị trung bình tương ứng với Sex và Pclass đã tính ở trên\n","\n","for i in range(0, 2):\n","   for j in range(0, 3):\n","       test3.loc[ (test3.Age.isnull()) & (test3.Sex == i) & (test3.Pclass == j+1),\\\n","                    'Age'] = guess_ages_test[i,j]\n","test3['Age'] = test3['Age'].astype(int)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UkExlhqXVDJb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1564019545455,"user_tz":-420,"elapsed":926,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"5a3f62d2-6936-49a6-d843-036308936d77"},"source":["#Dữ liệu Age trước khi xử lý missing của tập Test:\n","\n","test_df1[[\"PassengerId\",\"Age\"]].count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId    418\n","Age            332\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"8VMDFpfvVI0p","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":185},"executionInfo":{"status":"ok","timestamp":1564019548941,"user_tz":-420,"elapsed":828,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"3cc4b1d9-f0ad-4aa4-a822-3246322b87cf"},"source":["#Dữ liệu Age sau khi xử lý missing của tập Test:\n","test3.count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId    418\n","Pclass         418\n","Sex            418\n","Age            418\n","SibSp          418\n","Parch          418\n","Fare           417\n","Embarked       418\n","Title          418\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"wcxwz-qnIhM7","colab_type":"code","colab":{}},"source":["#---------------------KẾT THÚC BƯỚC XỬ LÝ DỮ LIỆU MISSING CỦA AGE-------------------\n","train_df4 = train3\n","test_df4 = test3\n","\n","combine4=[train_df4,test_df4]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gwasKDJNVnon","colab_type":"text"},"source":["##### B. Nhóm độ tuổi theo từng khoảng giới hạn\n","----\n","Thực hiện việc nhóm các tuổi lại theo từng khoảng:\n","\n","* Dưới 16 tuổi       :   --> Age = 0\n","* Từ 16 --> 32 tuổi:   --> Age = 1\n","* Từ 32 --> 48 tuổi:   --> Age = 2\n","* Từ 48 --> 64 tuổi:   --> Age = 4\n","* Trên 64 tuổi        :   --> Age = 5"]},{"cell_type":"code","metadata":{"id":"-cYZa3FTW9Cc","colab_type":"code","colab":{}},"source":["#Quan sát dữ liệu thuộc tính Age của tập dữ liệu\n","\n","train_df4.Age.describe()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bk7CWX8_JQ8T","colab_type":"code","colab":{}},"source":["test_df4.Age.describe()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B0Ndsio6Wqet","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564019561718,"user_tz":-420,"elapsed":791,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"fa6ee095-f2d5-4aba-d19f-77d36c68370b"},"source":["#Tách thộc tính tuổi thành n đoạn và tính tỷ lệ được cứu của hành khách theo từng đoạn tuổi\n","n=5\n","train_df4['AgeBand'] = pd.cut(train_df4['Age'], n)\n","\n","train_df4[['AgeBand', 'Survived']].groupby(['AgeBand'], as_index=False).mean().sort_values(by='AgeBand', ascending=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AgeBand</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(-0.08, 16.0]</td>\n","      <td>0.550000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(16.0, 32.0]</td>\n","      <td>0.337374</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(32.0, 48.0]</td>\n","      <td>0.412037</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(48.0, 64.0]</td>\n","      <td>0.434783</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(64.0, 80.0]</td>\n","      <td>0.090909</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         AgeBand  Survived\n","0  (-0.08, 16.0]  0.550000\n","1   (16.0, 32.0]  0.337374\n","2   (32.0, 48.0]  0.412037\n","3   (48.0, 64.0]  0.434783\n","4   (64.0, 80.0]  0.090909"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"zsMBLeiu-2Mp","colab_type":"code","colab":{}},"source":["train_df4[:10]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LAhR6E1lJD48","colab_type":"code","colab":{}},"source":["test_df4[:10]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uVGlnIhz8y1U","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564019567250,"user_tz":-420,"elapsed":825,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"fd5e66ac-6333-41c3-db52-d19afc123620"},"source":["#Thay thế tuổi tuyệt đối của hành khách bằng đoạn mà tuổi thuộc vào\n","#\n","#Thực hiện thay thế cho cả tập train:\n","\n","   \n","train_df4.loc[ train_df4['Age'] <= 16, 'Age'] = 0\n","train_df4.loc[(train_df4['Age'] > 16) & (train_df4['Age'] <= 32), 'Age'] = 1\n","train_df4.loc[(train_df4['Age'] > 32) & (train_df4['Age'] <= 48), 'Age'] = 2\n","train_df4.loc[(train_df4['Age'] > 48) & (train_df4['Age'] <= 64), 'Age'] = 3\n","train_df4.loc[ train_df4['Age'] > 64, 'Age'] = 4\n","\n","train_df4[['Age', 'AgeBand']].head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>AgeBand</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age       AgeBand\n","0    1  (16.0, 32.0]\n","1    2  (32.0, 48.0]\n","2    1  (16.0, 32.0]\n","3    2  (32.0, 48.0]\n","4    2  (32.0, 48.0]"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"J76F2tTzLyI8","colab_type":"code","colab":{}},"source":["#Thực hiện thay thế cho cả tập test:\n","\n","   \n","test_df4.loc[ test_df4['Age'] <= 16, 'Age'] = 0\n","test_df4.loc[(test_df4['Age'] > 16) & (test_df4['Age'] <= 32), 'Age'] = 1\n","test_df4.loc[(test_df4['Age'] > 32) & (test_df4['Age'] <= 48), 'Age'] = 2\n","test_df4.loc[(test_df4['Age'] > 48) & (test_df4['Age'] <= 64), 'Age'] = 3\n","test_df4.loc[ test_df4['Age'] > 64, 'Age'] = 4\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dS1tiG4FAG2A","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":491},"executionInfo":{"status":"ok","timestamp":1564019606915,"user_tz":-420,"elapsed":790,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"7de06307-7279-4acd-895a-33c20db5170a"},"source":["train_df4[620:635]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>AgeBand</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>620</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>14.4542</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>621</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>52.5542</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","    <tr>\n","      <th>622</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.7417</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>623</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8542</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>624</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>16.1000</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>625</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>32.3208</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(48.0, 64.0]</td>\n","    </tr>\n","    <tr>\n","      <th>626</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12.3500</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>(48.0, 64.0]</td>\n","    </tr>\n","    <tr>\n","      <th>627</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>77.9583</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>628</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8958</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>629</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7333</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>630</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(64.0, 80.0]</td>\n","    </tr>\n","    <tr>\n","      <th>631</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.0542</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(48.0, 64.0]</td>\n","    </tr>\n","    <tr>\n","      <th>632</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.5000</td>\n","      <td>1.0</td>\n","      <td>5</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>633</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0000</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","    <tr>\n","      <th>634</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>27.9000</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>(-0.08, 16.0]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     Survived  Pclass  Sex  Age  ...     Fare  Embarked  Title        AgeBand\n","620         0       3    0    1  ...  14.4542       1.0      1   (16.0, 32.0]\n","621         1       1    0    2  ...  52.5542       0.0      1   (32.0, 48.0]\n","622         1       3    0    1  ...  15.7417       1.0      1   (16.0, 32.0]\n","623         0       3    0    1  ...   7.8542       0.0      1   (16.0, 32.0]\n","624         0       3    0    1  ...  16.1000       0.0      1   (16.0, 32.0]\n","625         0       1    0    3  ...  32.3208       0.0      1   (48.0, 64.0]\n","626         0       2    0    3  ...  12.3500       2.0      5   (48.0, 64.0]\n","627         1       1    1    1  ...  77.9583       0.0      2   (16.0, 32.0]\n","628         0       3    0    1  ...   7.8958       0.0      1   (16.0, 32.0]\n","629         0       3    0    1  ...   7.7333       2.0      1   (16.0, 32.0]\n","630         1       1    0    4  ...  30.0000       0.0      1   (64.0, 80.0]\n","631         0       3    0    3  ...   7.0542       0.0      1   (48.0, 64.0]\n","632         1       1    0    1  ...  30.5000       1.0      5   (16.0, 32.0]\n","633         0       1    0    2  ...   0.0000       0.0      1   (32.0, 48.0]\n","634         0       3    1    0  ...  27.9000       0.0      2  (-0.08, 16.0]\n","\n","[15 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"BhEe9CNh_vk4","colab_type":"code","colab":{}},"source":["train_df1[train_df1['Age'] > 64]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aXHkbKPKMPOs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1564019641261,"user_tz":-420,"elapsed":710,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"08d09014-f903-4c9b-8cc2-fb00659f6631"},"source":["test_df4[:10]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8292</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.0000</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.6875</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.6625</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.2875</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>897</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.2250</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>898</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.6292</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>899</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>29.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>900</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2292</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>901</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>24.1500</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass  Sex  Age  SibSp  Parch     Fare  Embarked  Title\n","0          892       3    0    2      0      0   7.8292         2      1\n","1          893       3    1    2      1      0   7.0000         0      3\n","2          894       2    0    3      0      0   9.6875         2      1\n","3          895       3    0    1      0      0   8.6625         0      1\n","4          896       3    1    1      1      1  12.2875         0      3\n","5          897       3    0    0      0      0   9.2250         0      1\n","6          898       3    1    1      0      0   7.6292         2      2\n","7          899       2    0    1      1      1  29.0000         0      1\n","8          900       3    1    1      0      0   7.2292         1      3\n","9          901       3    0    1      2      0  24.1500         0      1"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"code","metadata":{"id":"3n7Wn2mZLIms","colab_type":"code","colab":{}},"source":["test_df3[:10]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"16Vt4cf7_tBA","colab_type":"code","colab":{}},"source":["#Loại bỏ thuộc tính AgeBand.\n","train_df4 = train_df4.drop(['AgeBand'],axis=1)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"C1mqJ_be26xs","colab_type":"code","colab":{}},"source":["#train_df4['Embarked'] = train_df4[\"Embarked\"].dropna().astype(int)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AB-D8QQGCTT4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":403},"executionInfo":{"status":"ok","timestamp":1564020135762,"user_tz":-420,"elapsed":740,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"cba41d7e-2581-4c12-ad54-c3d34a5ad39b"},"source":["print(train_df4[:10])\n","print('-'*40)\n","print(test_df4[:10])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["   Survived  Pclass  Sex  Age  SibSp  Parch     Fare  Embarked  Title\n","0         0       3    0    1      1      0   7.2500       0.0      1\n","1         1       1    1    2      1      0  71.2833       1.0      3\n","2         1       3    1    1      0      0   7.9250       0.0      2\n","3         1       1    1    2      1      0  53.1000       0.0      3\n","4         0       3    0    2      0      0   8.0500       0.0      1\n","5         0       3    0    1      0      0   8.4583       2.0      1\n","6         0       1    0    3      0      0  51.8625       0.0      1\n","7         0       3    0    0      3      1  21.0750       0.0      4\n","8         1       3    1    1      0      2  11.1333       0.0      3\n","9         1       2    1    0      1      0  30.0708       1.0      3\n","----------------------------------------\n","   PassengerId  Pclass  Sex  Age  SibSp  Parch     Fare  Embarked  Title\n","0          892       3    0    2      0      0   7.8292         2      1\n","1          893       3    1    2      1      0   7.0000         0      3\n","2          894       2    0    3      0      0   9.6875         2      1\n","3          895       3    0    1      0      0   8.6625         0      1\n","4          896       3    1    1      1      1  12.2875         0      3\n","5          897       3    0    0      0      0   9.2250         0      1\n","6          898       3    1    1      0      0   7.6292         2      2\n","7          899       2    0    1      1      1  29.0000         0      1\n","8          900       3    1    1      0      0   7.2292         1      3\n","9          901       3    0    1      2      0  24.1500         0      1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GYaebdryNOy4","colab_type":"code","colab":{}},"source":["#------------KẾT THÚC VIỆC THAY THẾ AGE BẰNG TỪNG NHÓM---------\n","train_df5 = train_df4\n","test_df5 = test_df4\n","combine5=[train_df5,test_df5]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pj63Re2KDXZl","colab_type":"text"},"source":["TẠO THUỘC TÍNH MỚI FamilySize CHO TẬP DỮ LIỆU:\n","\n","Tạo thuộc tính FamilySize = Parch + SibSp. Sau đó xóa 2 thuộc tính Parch, SibSp trong tập dữ liệu"]},{"cell_type":"code","metadata":{"id":"FB9hWe_XDyuG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":314},"executionInfo":{"status":"ok","timestamp":1564020248517,"user_tz":-420,"elapsed":751,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"35d47b78-39c6-4c3e-dd0a-62142018125e"},"source":["train_df5['FamilySize'] = train_df5['SibSp'] + train_df5['Parch'] + 1\n","\n","#-------------------------\n","\n","test_df5['FamilySize'] = test_df5['SibSp'] + test_df5['Parch'] + 1\n","\n","train_df5[['FamilySize','Survived']].groupby(['FamilySize'], as_index=False).mean().sort_values(by='Survived',ascending=False)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FamilySize</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0.724138</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.578431</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.552795</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.303538</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.200000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0.136364</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>11</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   FamilySize  Survived\n","3           4  0.724138\n","2           3  0.578431\n","1           2  0.552795\n","6           7  0.333333\n","0           1  0.303538\n","4           5  0.200000\n","5           6  0.136364\n","7           8  0.000000\n","8          11  0.000000"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"id":"tYx3q8fdE5CF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1564020259559,"user_tz":-420,"elapsed":930,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"f8203cd1-b93b-4211-bd31-414f66f4e24e"},"source":["train_df5[:10]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>FamilySize</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.4583</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>51.8625</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21.0750</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11.1333</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>30.0708</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age  ...     Fare  Embarked  Title  FamilySize\n","0         0       3    0    1  ...   7.2500       0.0      1           2\n","1         1       1    1    2  ...  71.2833       1.0      3           2\n","2         1       3    1    1  ...   7.9250       0.0      2           1\n","3         1       1    1    2  ...  53.1000       0.0      3           2\n","4         0       3    0    2  ...   8.0500       0.0      1           1\n","5         0       3    0    1  ...   8.4583       2.0      1           1\n","6         0       1    0    3  ...  51.8625       0.0      1           1\n","7         0       3    0    0  ...  21.0750       0.0      4           5\n","8         1       3    1    1  ...  11.1333       0.0      3           3\n","9         1       2    1    0  ...  30.0708       1.0      3           2\n","\n","[10 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"code","metadata":{"id":"dAnJGILXNukv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1564020265971,"user_tz":-420,"elapsed":827,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"7ae81190-d866-492e-fe87-c744076c76c6"},"source":["test_df5[:10]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>FamilySize</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8292</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.0000</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.6875</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.6625</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.2875</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>897</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.2250</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>898</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.6292</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>899</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>29.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>900</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2292</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>901</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>24.1500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass  Sex  Age  ...     Fare  Embarked  Title  FamilySize\n","0          892       3    0    2  ...   7.8292         2      1           1\n","1          893       3    1    2  ...   7.0000         0      3           2\n","2          894       2    0    3  ...   9.6875         2      1           1\n","3          895       3    0    1  ...   8.6625         0      1           1\n","4          896       3    1    1  ...  12.2875         0      3           3\n","5          897       3    0    0  ...   9.2250         0      1           1\n","6          898       3    1    1  ...   7.6292         2      2           1\n","7          899       2    0    1  ...  29.0000         0      1           3\n","8          900       3    1    1  ...   7.2292         1      3           1\n","9          901       3    0    1  ...  24.1500         0      1           3\n","\n","[10 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"id":"kw0hEvwrFPwL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564020298901,"user_tz":-420,"elapsed":755,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"6ef81541-5a2c-4bcc-b554-2a8c0794134e"},"source":["#Tạo ra đặc tính mới có tên là IsAlone cho tập dữ liệu\n","#Thuộc tính này cho biết hành khách đi một mình (=1) hay đi với người thân (=0)\n","train_df5['IsAlone'] = 0\n","\n","test_df5['IsAlone'] = 0\n","\n","#Giá trị của thuộc tính FamilySize = 1 thì giá trị IsAlone =1\n","\n","train_df5.loc[train_df5['FamilySize']==1,'IsAlone'] = 1\n","\n","\n","test_df5.loc[test_df5['FamilySize']==1,'IsAlone'] = 1\n","\n","train_df5.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>FamilySize</th>\n","      <th>IsAlone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age  ...  Embarked  Title  FamilySize  IsAlone\n","0         0       3    0    1  ...       0.0      1           2        0\n","1         1       1    1    2  ...       1.0      3           2        0\n","2         1       3    1    1  ...       0.0      2           1        1\n","3         1       1    1    2  ...       0.0      3           2        0\n","4         0       3    0    2  ...       0.0      1           1        1\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"ANQkyruAGbnN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1564020308788,"user_tz":-420,"elapsed":790,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"5f06d614-ff52-443a-a7c4-0e6c57dc278e"},"source":["train_df5[['IsAlone','Survived']].groupby(['IsAlone'],as_index=False).mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>IsAlone</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.505650</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.303538</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   IsAlone  Survived\n","0        0  0.505650\n","1        1  0.303538"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"eVx46Bb-G0O6","colab_type":"code","colab":{}},"source":["# Xóa các thuộc tính Parch, SibSp, FamilySize\n","\n","train_df5 = train_df5.drop(['Parch','SibSp','FamilySize'],axis=1)\n","\n","\n","test_df5 = test_df5.drop(['Parch','SibSp','FamilySize'],axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JbS-fly_OSi_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1564020370056,"user_tz":-420,"elapsed":714,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"27ab18f8-c16f-40b7-a522-fa874792e3b0"},"source":["print(train_df4.head())\n","print(\"-\"*40)\n","print(train_df5.head())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["   Survived  Pclass  Sex  Age  ...  Embarked  Title  FamilySize  IsAlone\n","0         0       3    0    1  ...       0.0      1           2        0\n","1         1       1    1    2  ...       1.0      3           2        0\n","2         1       3    1    1  ...       0.0      2           1        1\n","3         1       1    1    2  ...       0.0      3           2        0\n","4         0       3    0    2  ...       0.0      1           1        1\n","\n","[5 rows x 11 columns]\n","----------------------------------------\n","   Survived  Pclass  Sex  Age     Fare  Embarked  Title  IsAlone\n","0         0       3    0    1   7.2500       0.0      1        0\n","1         1       1    1    2  71.2833       1.0      3        0\n","2         1       3    1    1   7.9250       0.0      2        1\n","3         1       1    1    2  53.1000       0.0      3        0\n","4         0       3    0    2   8.0500       0.0      1        1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"K_1N-ED7OelE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1564020419250,"user_tz":-420,"elapsed":871,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"0537b3cb-5d35-4411-b7ec-9b28e95d0375"},"source":["print(test_df4.head())\n","print(\"-\"*40)\n","print(test_df5.head())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["   PassengerId  Pclass  Sex  Age  ...  Embarked  Title  FamilySize  IsAlone\n","0          892       3    0    2  ...         2      1           1        1\n","1          893       3    1    2  ...         0      3           2        0\n","2          894       2    0    3  ...         2      1           1        1\n","3          895       3    0    1  ...         0      1           1        1\n","4          896       3    1    1  ...         0      3           3        0\n","\n","[5 rows x 11 columns]\n","----------------------------------------\n","   PassengerId  Pclass  Sex  Age     Fare  Embarked  Title  IsAlone\n","0          892       3    0    2   7.8292         2      1        1\n","1          893       3    1    2   7.0000         0      3        0\n","2          894       2    0    3   9.6875         2      1        1\n","3          895       3    0    1   8.6625         0      1        1\n","4          896       3    1    1  12.2875         0      3        0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"cuXqE9tTOnL7","colab_type":"code","colab":{}},"source":["#Nối train, Test\n","combine5 = [train_df5,test_df5]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lk2QRvVvOy9B","colab_type":"text"},"source":["TẠO MỘT THUỘC TÍNH ĐỆM LÀ SỰ KẾT HỢP CỦA 2 THUỘC TÍNH Pclass và Age"]},{"cell_type":"code","metadata":{"id":"_xuiI-9LO7XY","colab_type":"code","colab":{}},"source":["for dataset in combine5:\n","  dataset['Age*Pclass'] = dataset.Age*dataset.Pclass\n","  "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nYL7-AxsPqd6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1564020469549,"user_tz":-420,"elapsed":775,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"0e79ffde-7ee0-46a0-c741-a496f1916c64"},"source":["train_df5[:10]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Pclass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>7.2500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>71.2833</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7.9250</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>53.1000</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>8.0500</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8.4583</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>51.8625</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>21.0750</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11.1333</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>30.0708</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age     Fare  Embarked  Title  IsAlone  Age*Pclass\n","0         0       3    0    1   7.2500       0.0      1        0           3\n","1         1       1    1    2  71.2833       1.0      3        0           2\n","2         1       3    1    1   7.9250       0.0      2        1           3\n","3         1       1    1    2  53.1000       0.0      3        0           2\n","4         0       3    0    2   8.0500       0.0      1        1           6\n","5         0       3    0    1   8.4583       2.0      1        1           3\n","6         0       1    0    3  51.8625       0.0      1        1           3\n","7         0       3    0    0  21.0750       0.0      4        0           0\n","8         1       3    1    1  11.1333       0.0      3        0           3\n","9         1       2    1    0  30.0708       1.0      3        0           0"]},"metadata":{"tags":[]},"execution_count":56}]},{"cell_type":"code","metadata":{"id":"qPFkTjSMQKJW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1564020525025,"user_tz":-420,"elapsed":690,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"8f341401-bffb-4cd4-aa29-ff4f045858c6"},"source":["train_df5.loc[:5, ['Age*Pclass', 'Age', 'Pclass']]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age*Pclass</th>\n","      <th>Age</th>\n","      <th>Pclass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age*Pclass  Age  Pclass\n","0           3    1       3\n","1           2    2       1\n","2           3    1       3\n","3           2    2       1\n","4           6    2       3\n","5           3    1       3"]},"metadata":{"tags":[]},"execution_count":59}]},{"cell_type":"code","metadata":{"id":"V71fmMOJQhAb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1564020506049,"user_tz":-420,"elapsed":775,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"bb3dc732-a581-469a-c997-859e8137711c"},"source":["test_df5.loc[:5,['Age*Pclass','Age','Pclass']]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age*Pclass</th>\n","      <th>Age</th>\n","      <th>Pclass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age*Pclass  Age  Pclass\n","0           6    2       3\n","1           6    2       3\n","2           6    3       2\n","3           3    1       3\n","4           3    1       3\n","5           0    0       3"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"markdown","metadata":{"id":"roAxS_ZqQ8EN","colab_type":"text"},"source":["##### 3.5.2) Xử lý giá trị mất mát của thuộc tính Embarked\n","---\n","Thuộc tính Embarked cho biết hành khách lên tàu ở Port nào? Embarked nhận 1 trong  3 giá trị S, Q, C.\n","\n","Trong thuộc tính Embarked có 2 giá trị missing, để xử lý các giá trị missing này ta thực hiện bằng cách, lấy giá trị xuất hiện nhiều nhất của thuộc tính Embarked để thay thế cho giá trị missing.\n","\n","Tổng 891 hành khách, có 889 hành khách có giá trị thuộc tính Embarked, 2 hành khách missing.\n","\n","Trong ba giá trị S, Q, C có số lần xuất hiện như sau:\n","* 0 (S): 644 lần (Xuất hiện nhiều nhất)\n","* 1 (C) : 168 lần\n","* 2 (Q): 77 lần\n"]},{"cell_type":"code","metadata":{"id":"FD-x9IHgVD9M","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":185},"executionInfo":{"status":"ok","timestamp":1564020582101,"user_tz":-420,"elapsed":772,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"b2d1e46e-6f1e-4f85-c703-02464ca4c945"},"source":["#Check số hành khách missing thuộc tính Embarked\n","train_df5.count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Survived      891\n","Pclass        891\n","Sex           891\n","Age           891\n","Fare          891\n","Embarked      889\n","Title         891\n","IsAlone       891\n","Age*Pclass    891\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":62}]},{"cell_type":"code","metadata":{"id":"I9Glju3hTXRR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1564020604872,"user_tz":-420,"elapsed":847,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"c961f1a7-b30b-4603-ce5b-c11ceef5000d"},"source":["#Thống kê số lần xuất hiện của các giá trị trong thuộc tính Embarked của tập Train\n","\n","train_df1[['Embarked','Survived']].groupby(['Embarked'], as_index=False).count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Embarked</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>C</td>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Q</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>S</td>\n","      <td>644</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Embarked  Survived\n","0        C       168\n","1        Q        77\n","2        S       644"]},"metadata":{"tags":[]},"execution_count":63}]},{"cell_type":"code","metadata":{"id":"gU2E9QsPRl-P","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":101},"executionInfo":{"status":"ok","timestamp":1564020647144,"user_tz":-420,"elapsed":739,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"93ee71b2-451e-4eea-b495-74b0a060bd2c"},"source":["# Thống kê giá trị xuất hiện nhiều nhất của thuộc tính Embarked\n","\n","train_df1['Embarked'].describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     889\n","unique      3\n","top         S\n","freq      644\n","Name: Embarked, dtype: object"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"code","metadata":{"id":"4GqH2Q2aS_GV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1564020698971,"user_tz":-420,"elapsed":837,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"e0b6f237-4398-4cdd-cfea-742722a8cb66"},"source":["# Thực hiện việc xử lý dữ liệu missing của thuộc tính Embarked:\n","\n","#B1. Xác định giá trị xuất hiện nhiều nhất của thuộc tính Embarked\n","\n","#dropna() loại bỏ các trường hợp null\n","#mode() cho biết giá trị xuất hiện thường xuyên nhất.\n","\n","freq_port = train_df5.Embarked.dropna().mode()[0]\n","\n","print('Port xuất hiện nhiều nhất:',freq_port)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Port xuất hiện nhiều nhất: 0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RRMbKcEDXF_I","colab_type":"code","colab":{}},"source":["#B2. Thay thế các giá trị missing của thuộc tính Embarked \n","#bằng giá trị xuất hiện nhiều nhất ở trên cho cả tập Train và Test\n","for dataset in combine5:\n","  dataset['Embarked'] = dataset['Embarked'].fillna(freq_port)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gVH_1q1pYSRB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":252},"executionInfo":{"status":"ok","timestamp":1564020806087,"user_tz":-420,"elapsed":797,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"ff61b229-0500-44b5-fa00-8c75348817b8"},"source":["\n","train_df5.info()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 9 columns):\n","Survived      891 non-null int64\n","Pclass        891 non-null int64\n","Sex           891 non-null int64\n","Age           891 non-null int64\n","Fare          891 non-null float64\n","Embarked      891 non-null float64\n","Title         891 non-null int64\n","IsAlone       891 non-null int64\n","Age*Pclass    891 non-null int64\n","dtypes: float64(2), int64(7)\n","memory usage: 62.7 KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JV70ZHbb6EP7","colab_type":"code","colab":{}},"source":["#Xử lý dữ liệu của thuộc tính Fare"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-HsUCGaI8Byk","colab_type":"text"},"source":["#####3.5.3) Xử lý dữ liệu thuộc tính Farre\n","----\n","Với tập train, thuộc tính fare không có dữ liệu missing. Thực hiện phân chia giá trị trong thuộc tính fare vào từng đoạn, giống như việc xử lý với phân đoạn tuổi.\n","\n","Thực hiện chia giới hạn của Fare thành 4 đoạn, và chuyển giá trị tương ứng với đoạn:\n","* <  7.91               ---> 0\n","* (7.91; 14.45]     ---> 1\n","* (14.45; 31]        ---> 2\n","* '' > 31                    ---> 3\n","\n","Với tập Test: một số giá trị của thuộc tính Fare bị missing data, do đó trước khi tiến hành phân đoạn, cần xử lý các dữ liệu missing này bằng cách thay thế các dữ liệu missing data bằng giá trị trung bình của thuộc tính fare trong toàn bộ tập test.\n"]},{"cell_type":"code","metadata":{"id":"AOj5ufA29fX_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":252},"executionInfo":{"status":"ok","timestamp":1564022053219,"user_tz":-420,"elapsed":738,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"a18c7c82-0c0f-4f9e-bcdf-6cad29b7e44e"},"source":["# Xử lý dữ liệu missing của tập test.\n","\n","test_df5.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 0 to 417\n","Data columns (total 9 columns):\n","PassengerId    418 non-null int64\n","Pclass         418 non-null int64\n","Sex            418 non-null int64\n","Age            418 non-null int64\n","Fare           417 non-null float64\n","Embarked       418 non-null int64\n","Title          418 non-null int64\n","IsAlone        418 non-null int64\n","Age*Pclass     418 non-null int64\n","dtypes: float64(1), int64(8)\n","memory usage: 29.5 KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"E6jhEOvv9xHK","colab_type":"code","colab":{}},"source":["test_df5['Fare'].fillna(test_df['Fare'].dropna().median(), inplace=True)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aqAncdhk-rv_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":252},"executionInfo":{"status":"ok","timestamp":1564022072803,"user_tz":-420,"elapsed":837,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"fbbe57df-4ce7-4478-e33d-b642edf9e4d5"},"source":["#Tập test sau khi xử lý missing data\n","test_df5.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 0 to 417\n","Data columns (total 9 columns):\n","PassengerId    418 non-null int64\n","Pclass         418 non-null int64\n","Sex            418 non-null int64\n","Age            418 non-null int64\n","Fare           418 non-null float64\n","Embarked       418 non-null int64\n","Title          418 non-null int64\n","IsAlone        418 non-null int64\n","Age*Pclass     418 non-null int64\n","dtypes: float64(1), int64(8)\n","memory usage: 29.5 KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sH4TBh8U-8yD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1564022157362,"user_tz":-420,"elapsed":1615,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"024fd902-d559-4d26-facc-9b98c8c32966"},"source":["#Chia fare thành 4 đoạn\n","train_df5['FareBand'] = pd.qcut(train_df5['Fare'], 4)\n","train_df5[['FareBand', 'Survived']].groupby(['FareBand'], as_index=False).mean().sort_values(by='FareBand', ascending=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FareBand</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(-0.001, 7.91]</td>\n","      <td>0.197309</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(7.91, 14.454]</td>\n","      <td>0.303571</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(14.454, 31.0]</td>\n","      <td>0.454955</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(31.0, 512.329]</td>\n","      <td>0.581081</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          FareBand  Survived\n","0   (-0.001, 7.91]  0.197309\n","1   (7.91, 14.454]  0.303571\n","2   (14.454, 31.0]  0.454955\n","3  (31.0, 512.329]  0.581081"]},"metadata":{"tags":[]},"execution_count":88}]},{"cell_type":"code","metadata":{"id":"kHF_RSt__I97","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":437},"executionInfo":{"status":"ok","timestamp":1564022311124,"user_tz":-420,"elapsed":793,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"c7c324f3-4d3b-4c1d-c5cc-143b20d65cef"},"source":["#Chuyển đổi giá trị về đoạn như trên trong cả tập train và test:\n","print(train_df5[:10])\n","print(\"-\"*40)\n","print(test_df5[:10])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["   Survived  Pclass  Sex  Age  ...  Title  IsAlone  Age*Pclass         FareBand\n","0         0       3    0    1  ...      1        0           3   (-0.001, 7.91]\n","1         1       1    1    2  ...      3        0           2  (31.0, 512.329]\n","2         1       3    1    1  ...      2        1           3   (7.91, 14.454]\n","3         1       1    1    2  ...      3        0           2  (31.0, 512.329]\n","4         0       3    0    2  ...      1        1           6   (7.91, 14.454]\n","5         0       3    0    1  ...      1        1           3   (7.91, 14.454]\n","6         0       1    0    3  ...      1        1           3  (31.0, 512.329]\n","7         0       3    0    0  ...      4        0           0   (14.454, 31.0]\n","8         1       3    1    1  ...      3        0           3   (7.91, 14.454]\n","9         1       2    1    0  ...      3        0           0   (14.454, 31.0]\n","\n","[10 rows x 10 columns]\n","----------------------------------------\n","   PassengerId  Pclass  Sex  Age     Fare  Embarked  Title  IsAlone  Age*Pclass\n","0          892       3    0    2   7.8292         2      1        1           6\n","1          893       3    1    2   7.0000         0      3        0           6\n","2          894       2    0    3   9.6875         2      1        1           6\n","3          895       3    0    1   8.6625         0      1        1           3\n","4          896       3    1    1  12.2875         0      3        0           3\n","5          897       3    0    0   9.2250         0      1        1           0\n","6          898       3    1    1   7.6292         2      2        1           3\n","7          899       2    0    1  29.0000         0      1        0           2\n","8          900       3    1    1   7.2292         1      3        1           3\n","9          901       3    0    1  24.1500         0      1        0           3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pUlIHdDJ_tdH","colab_type":"code","colab":{}},"source":["#Chuyển đổi dữ liệu thuộc tính fare trong tập train về từng đoạn:\n","\n","train_df5.loc[ train_df5['Fare'] <= 7.91, 'Fare'] = 0\n","train_df5.loc[(train_df5['Fare'] > 7.91) & (train_df5['Fare'] <= 14.454), 'Fare'] = 1\n","train_df5.loc[(train_df5['Fare'] > 14.454) & (train_df5['Fare'] <= 31), 'Fare']   = 2\n","train_df5.loc[ train_df5['Fare'] > 31, 'Fare'] = 3\n","train_df5['Fare'] = train_df5['Fare'].astype(int)\n","\n","#Xóa cột dữ liệu tạm FareBand\n","train_finish = train_df5.drop(['FareBand'], axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2cujJP0vAF-h","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564022871889,"user_tz":-420,"elapsed":805,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"1b801c06-6f7d-4268-82cc-4feaeb8d0978"},"source":["#Chuyển đổi dữ liệu trong tập Train về cùng một kiểu int64\n","train_finish = train_finish.astype('int64',copy=False)\n","\n","train_finish.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Pclass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age  Fare  Embarked  Title  IsAlone  Age*Pclass\n","0         0       3    0    1     0         0      1        0           3\n","1         1       1    1    2     3         1      3        0           2\n","2         1       3    1    1     1         0      2        1           3\n","3         1       1    1    2     3         0      3        0           2\n","4         0       3    0    2     1         0      1        1           6"]},"metadata":{"tags":[]},"execution_count":98}]},{"cell_type":"code","metadata":{"id":"jDSvgIaHAPcp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":252},"executionInfo":{"status":"ok","timestamp":1564022882590,"user_tz":-420,"elapsed":744,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"2e84f927-a9df-4a0f-b148-b07fdf411c92"},"source":["train_finish.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 9 columns):\n","Survived      891 non-null int64\n","Pclass        891 non-null int64\n","Sex           891 non-null int64\n","Age           891 non-null int64\n","Fare          891 non-null int64\n","Embarked      891 non-null int64\n","Title         891 non-null int64\n","IsAlone       891 non-null int64\n","Age*Pclass    891 non-null int64\n","dtypes: int64(9)\n","memory usage: 62.7 KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SgSQAibMHDvY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1564024359529,"user_tz":-420,"elapsed":845,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"deded964-aca7-4f61-f227-b0d344ac1642"},"source":["#Chuyển đổi dữ liệu thuộc tính fare trong tập test về từng đoạn:\n","\n","test_df5.loc[ test_df5['Fare'] <= 7.91, 'Fare'] = 0\n","test_df5.loc[(test_df5['Fare'] > 7.91) & (test_df5['Fare'] <= 14.454), 'Fare'] = 1\n","test_df5.loc[(test_df5['Fare'] > 14.454) & (test_df5['Fare'] <= 31), 'Fare']   = 2\n","test_df5.loc[ test_df5['Fare'] > 31, 'Fare'] = 3\n","test_df5['Fare'] = test_df5['Fare'].astype(int)\n","\n","test_df5.head()\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Pclass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass  Sex  Age  Fare  Embarked  Title  IsAlone  Age*Pclass\n","0          892       3    0    2     0         2      1        1           6\n","1          893       3    1    2     0         0      3        0           6\n","2          894       2    0    3     1         2      1        1           6\n","3          895       3    0    1     1         0      1        1           3\n","4          896       3    1    1     1         0      3        0           3"]},"metadata":{"tags":[]},"execution_count":101}]},{"cell_type":"code","metadata":{"id":"NJZPFQ6MHt5M","colab_type":"code","colab":{}},"source":["test_finish = test_df5"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5dVTHDxJv5JW","colab_type":"text"},"source":["####3.6) Lưu dữ liệu sau khi đã xử lý ra file .csv\n","---\n","Lưu dữ liệu sau khi đã chuẩn hóa ra file:\n","* Dữ liệu train: Train_finish_Titanic.csv\n","* Dữ liệu test: Test_finish_Titanic.csv"]},{"cell_type":"code","metadata":{"id":"r_64MLDQC5TJ","colab_type":"code","colab":{}},"source":["#Lưu dữ liệu sau khi xư lý ra file \n","\n","train_finish.to_csv (r'Train_finish_Titanic.csv', index = None, header=True)\n","test_finish.to_csv (r'Test_finish_Titanic.csv', index = None, header=True)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4OrA0oRQJt9e","colab_type":"text"},"source":["### 4) Xây dựng các mô hình học máy giải quyết bài toán:\n","----\n","Đây thuộc lớp bài toán học có giám sát (Supervived learning) , thực hiện việc phân lớp và hồi quy. Các mô hình cơ bản để giải quyết vấn đề này bao gồm:\n","* Logistic Regression\n","* KNN - k-Nearest Neighbors\n","* SVM - Support Vector Machines\n","* Naive Bayes classifier\n","* Decision Tree\n","* Random Forrest\n","* Perceptron\n","* Artificial neural network\n"]},{"cell_type":"markdown","metadata":{"id":"W84U7OnnK7a5","colab_type":"text"},"source":["#### 4.1) Chuẩn bị dữ liệu cho Model\n","---\n","\n","Tạo tập dữ liệu cho việc Train bao gồm:\n","* Tập X_Train: Chứa 8 thuộc tính để đưa vào mô hình bao gồm: Pclass | Sex | Age | Embarked | Title | IsAlone | Age*Pclass\n","* Tập Y_Train (ground truth): thuộc tính Survived\n","\n","Tạo tập dữ liệu cho việcTest: X_test cũng chứa 8 thuộc tính như tập X_Train"]},{"cell_type":"code","metadata":{"id":"8auZmU3UJsQz","colab_type":"code","colab":{}},"source":["#Lấy dữ liệu từ biến vừa được xử lý ở trên\n","\n","X_train = train_finish.drop(\"Survived\", axis=1)\n","Y_train = train_finish[\"Survived\"]\n","\n","X_test = test_finish.drop(\"PassengerId\", axis = 1).copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aBOm3eVI5vOi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1564038255957,"user_tz":-420,"elapsed":1555,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"ac975b25-7da8-45c9-e6e4-eb5eb7046855"},"source":["#Lấy dữ liệu từ file đã xử lý được lưu trữ: Train_finish_Titanic.csv | Test_finish_Titanic.csv\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","#Lưu ý: thay đổi đường dẫn cho phù hợp với Driver của mình\n","\n","path_train_finish =\"/content/drive/My Drive/Colab Notebooks/10Project/Data_titanic/Train_finish_Titanic.csv\"\n","path_test_finish = \"/content/drive/My Drive/Colab Notebooks/10Project/Data_titanic/Test_finish_Titanic.csv\"\n","\n","train_finish = pd.read_csv(path_train_finish)\n","test_finish = pd.read_csv(path_test_finish)\n","\n","#Thực hiện tách dữ liệu ra X_Train | Y_train\n","X_train = train_finish.drop(\"Survived\", axis=1)\n","Y_train = train_finish[\"Survived\"]\n","\n","#Thực hiện tách dữ liệu X_Test\n","X_test = test_finish.drop(\"PassengerId\", axis = 1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wQfofBP_K7Fa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":84},"executionInfo":{"status":"ok","timestamp":1564038260352,"user_tz":-420,"elapsed":800,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"d81b0d31-5a95-483f-fb0e-eaff3f4dc716"},"source":["print(\"Thông tin tập X_train: \", X_train.shape)\n","print(\"Thông tin tập Y_train: \", Y_train.shape)\n","print(\"Thông tin tập X_test: \", X_test.shape)\n","print(type(X_train))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Thông tin tập X_train:  (891, 8)\n","Thông tin tập Y_train:  (891,)\n","Thông tin tập X_test:  (418, 8)\n","<class 'pandas.core.frame.DataFrame'>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yEa9KSk18icB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"executionInfo":{"status":"ok","timestamp":1564038352187,"user_tz":-420,"elapsed":752,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"1f84eb31-dfaa-4da2-80bd-21f8ea789d72"},"source":["#X_train[:10]\n","\n","#Y_train[:10]\n","\n","X_test[:10]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Pclass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Pclass  Sex  Age  Fare  Embarked  Title  IsAlone  Age*Pclass\n","0       3    0    2     0         2      1        1           6\n","1       3    1    2     0         0      3        0           6\n","2       2    0    3     1         2      1        1           6\n","3       3    0    1     1         0      1        1           3\n","4       3    1    1     1         0      3        0           3\n","5       3    0    0     1         0      1        1           0\n","6       3    1    1     0         2      2        1           3\n","7       2    0    1     2         0      1        0           2\n","8       3    1    1     0         1      3        1           3\n","9       3    0    1     2         0      1        0           3"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"0AwWCg07OTYY","colab_type":"text"},"source":["#### 4.2) Model Logistic Regression\n","---\n"]},{"cell_type":"code","metadata":{"id":"zba1fsnXOhFJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":134},"executionInfo":{"status":"ok","timestamp":1564038371266,"user_tz":-420,"elapsed":1084,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"5325c082-b384-4a47-d113-bf564cabd30e"},"source":["from sklearn.linear_model import LogisticRegression\n","\n","logreg = LogisticRegression(random_state=0, solver='lbfgs',multi_class='multinomial')\n","#Huấn luyện mô hình với tập Train\n","logreg.fit(X_train,Y_train)\n","\n","#sử dụng mô hình để dự đoán với tập Test\n","Y_pred = logreg.predict(X_test)\n","\n","#Độ tin cậy của mô hình (Tính trên tập Train)\n","acc_log = round(logreg.score(X_train, Y_train) * 100, 2)\n","print(\"Độ chính xác của mô hình LoR trên tập Train: \", acc_log, \"%\")\n","print(\"Các tham số của Model LogisticRegression: \\n\",logreg)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình LoR trên tập Train:  81.48 %\n","Các tham số của Model LogisticRegression: \n"," LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n","                   intercept_scaling=1, l1_ratio=None, max_iter=100,\n","                   multi_class='multinomial', n_jobs=None, penalty='l2',\n","                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,\n","                   warm_start=False)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SMZ6XoLKPDzW","colab_type":"code","colab":{}},"source":["Y_pred"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6c9lM6nAQScR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":284},"executionInfo":{"status":"ok","timestamp":1564026718448,"user_tz":-420,"elapsed":885,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"d313fd40-b3f8-4fb7-edb0-944ca8037cd6"},"source":["#Xác định mức độ ảnh hưởng của các thuộc tính tới kết quả của mô hình\n","\n","coeff_df = pd.DataFrame(train_finish.columns.delete(0))\n","coeff_df.columns = ['Feature']\n","coeff_df[\"Correlation\"] = pd.Series(logreg.coef_[0])\n","\n","coeff_df.sort_values(by='Correlation', ascending=False)\n","\n","#Thuộc tính Sex là thuộc tính có hệ số ảnh hưởng cao nhất\n","# Nghịch đảo của thuộc tính Pclass tăng, xác suất được cứu Survived = 1 giảm nhiều nhất\n","# Thuộc tính Age*Pclass là thuộc tính được tạo thêm khá tốt để mô hình hóa vì nó có tương quan tiêu cực cao thứ 2 "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","      <th>Correlation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Sex</td>\n","      <td>2.200978</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Title</td>\n","      <td>0.414362</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Embarked</td>\n","      <td>0.281026</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>IsAlone</td>\n","      <td>0.262084</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Fare</td>\n","      <td>-0.022062</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Age*Pclass</td>\n","      <td>-0.085959</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Age</td>\n","      <td>-0.371647</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Pclass</td>\n","      <td>-1.083515</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Feature  Correlation\n","1         Sex     2.200978\n","5       Title     0.414362\n","4    Embarked     0.281026\n","6     IsAlone     0.262084\n","3        Fare    -0.022062\n","7  Age*Pclass    -0.085959\n","2         Age    -0.371647\n","0      Pclass    -1.083515"]},"metadata":{"tags":[]},"execution_count":115}]},{"cell_type":"markdown","metadata":{"id":"Zi8Cfs1rSk7A","colab_type":"text"},"source":["#### 4.3) Support Vector Machines\n","---\n"]},{"cell_type":"code","metadata":{"id":"dsEPcH7JS5U7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":118},"executionInfo":{"status":"ok","timestamp":1564038599733,"user_tz":-420,"elapsed":819,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"218c8b8d-24c3-4e14-bf2d-2fc2de758ea8"},"source":["from sklearn.svm import SVC\n","\n","svc = SVC(gamma='auto')\n","svc.fit(X_train, Y_train)\n","\n","Y_pred = svc.predict(X_test)\n","acc_svc = round(svc.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình SVC trên tập Train: \", acc_svc, \"%\")\n","print(\"Các tham số của model SVM:\\n\",svc)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình SVC trên tập Train:  83.5 %\n","Các tham số của model SVM:\n"," SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n","    decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',\n","    max_iter=-1, probability=False, random_state=None, shrinking=True,\n","    tol=0.001, verbose=False)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"M4E4fhGPTbN4","colab_type":"text"},"source":["#### 4.4) KNN\n","----\n"]},{"cell_type":"code","metadata":{"id":"MaXdwpH_TgYD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":101},"executionInfo":{"status":"ok","timestamp":1564038604576,"user_tz":-420,"elapsed":2269,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"9bdde377-6cd7-45ca-9e92-091bd75fcbb2"},"source":["from sklearn.neighbors import KNeighborsClassifier\n","\n","knn = KNeighborsClassifier(algorithm='ball_tree',n_neighbors = 3)\n","\n","knn.fit(X_train, Y_train)\n","\n","Y_pred = knn.predict(X_test)\n","\n","acc_knn = round(knn.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình KNN trên tập Train: \", acc_knn, \"%\")\n","print(\"Các tham số của Model KNN: \\n\",knn)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình KNN trên tập Train:  84.06 %\n","Các tham số của Model KNN: \n"," KNeighborsClassifier(algorithm='ball_tree', leaf_size=30, metric='minkowski',\n","                     metric_params=None, n_jobs=None, n_neighbors=3, p=2,\n","                     weights='uniform')\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"47vjXqn6T55L","colab_type":"text"},"source":["#### 4.5) Naive Bayes classsifiers\n","----\n"]},{"cell_type":"code","metadata":{"id":"W_IZvhrgUXF4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1564038608699,"user_tz":-420,"elapsed":864,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"17739172-cd0f-427f-8360-f6e082349027"},"source":["from sklearn.naive_bayes import GaussianNB\n","\n","gaussian = GaussianNB()\n","\n","gaussian.fit(X_train, Y_train)\n","Y_pred = gaussian.predict(X_test)\n","acc_gaussian = round(gaussian.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình NB trên tập Train: \", acc_gaussian, \"%\")\n","print(\"Các tham số của Model GaussianNB: \\n\",gaussian)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình NB trên tập Train:  76.88 %\n","Các tham số của Model GaussianNB: \n"," GaussianNB(priors=None, var_smoothing=1e-09)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"a6OQYHcBUiiR","colab_type":"text"},"source":["#### 4.6) Deccison Tree\n","----\n"]},{"cell_type":"code","metadata":{"id":"of2kQBJ8UmVu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":151},"executionInfo":{"status":"ok","timestamp":1564038613471,"user_tz":-420,"elapsed":839,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"acd17521-93de-4897-8cd6-29414cc3fb7e"},"source":["from sklearn.tree import DecisionTreeClassifier\n","\n","decision_tree = DecisionTreeClassifier(criterion='entropy')\n","decision_tree.fit(X_train, Y_train)\n","Y_pred = decision_tree.predict(X_test)\n","acc_decision_tree = round(decision_tree.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình NB trên tập Train: \", acc_decision_tree, \"%\")\n","print(\"Các tham số của Model Decision Tree: \\n\", decision_tree)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình NB trên tập Train:  86.64 %\n","Các tham số của Model Decision Tree: \n"," DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=None,\n","                       max_features=None, max_leaf_nodes=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, presort=False,\n","                       random_state=None, splitter='best')\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"CdAWsLCDUylj","colab_type":"text"},"source":["#### 4.7) Random Forests\n","---\n"]},{"cell_type":"code","metadata":{"id":"DARi7PJdU_TE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":168},"executionInfo":{"status":"ok","timestamp":1564038618642,"user_tz":-420,"elapsed":858,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"d9c0c6f9-c9a2-4512-b8b0-bd5b84752018"},"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","random_forest = RandomForestClassifier(criterion='entropy', n_estimators=100)\n","random_forest.fit(X_train, Y_train)\n","#Y_pred = random_forest.predict(X_test)\n","#random_forest.score(X_train, Y_train)\n","acc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình Random Forest trên tập Train: \",acc_random_forest)\n","print(\"Các tham số của Model Random Forest:\\n\",random_forest)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình Random Forest trên tập Train:  86.64\n","Các tham số của Model Random Forest:\n"," RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',\n","                       max_depth=None, max_features='auto', max_leaf_nodes=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, n_estimators=100,\n","                       n_jobs=None, oob_score=False, random_state=None,\n","                       verbose=0, warm_start=False)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_9r84GyIb0Bp","colab_type":"text"},"source":["#### 4.8) Linear Model : SGDClassifier\n","----\n"]},{"cell_type":"code","metadata":{"id":"LXih5x2Ub_UC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":151},"executionInfo":{"status":"ok","timestamp":1564038625163,"user_tz":-420,"elapsed":805,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"f1f895c0-ce64-4e88-bcda-cd4cdcbe13f3"},"source":["from sklearn.linear_model import SGDClassifier\n","\n","sgdc = SGDClassifier(max_iter=1000, tol=1e-3)\n","sgdc.fit(X_train,Y_train)\n","\n","acc_sgdc = round(sgdc.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình SGDClassifier trên tập Train: \",acc_sgdc)\n","print(\"Các tham số của Model Linear - SGDClassifier:\\n\",sgdc)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình SGDClassifier trên tập Train:  71.16\n","Các tham số của Model Linear - SGDClassifier:\n"," SGDClassifier(alpha=0.0001, average=False, class_weight=None,\n","              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,\n","              l1_ratio=0.15, learning_rate='optimal', loss='hinge',\n","              max_iter=1000, n_iter_no_change=5, n_jobs=None, penalty='l2',\n","              power_t=0.5, random_state=None, shuffle=True, tol=0.001,\n","              validation_fraction=0.1, verbose=0, warm_start=False)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"3VbBrW0be3ug","colab_type":"text"},"source":["#### 4.9) Linear Model: SGDRegressor\n","----\n"]},{"cell_type":"code","metadata":{"id":"kQURsX8he0UH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":151},"executionInfo":{"status":"ok","timestamp":1564038628948,"user_tz":-420,"elapsed":874,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"8319bbf4-8799-41f9-de8c-6d0a8beb8556"},"source":["from sklearn.linear_model import SGDRegressor\n","\n","sgdr = SGDRegressor(max_iter=1000, tol=1e-3)\n","sgdr.fit(X_train,Y_train)\n","\n","acc_sgdr = round(sgdr.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình SGDRegressor trên tập Train: \",acc_sgdr)\n","print(\"Các tham số của Model Linear - SGDRegressor:\\n\",sgdr)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình SGDRegressor trên tập Train:  37.58\n","Các tham số của Model Linear - SGDRegressor:\n"," SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,\n","             eta0=0.01, fit_intercept=True, l1_ratio=0.15,\n","             learning_rate='invscaling', loss='squared_loss', max_iter=1000,\n","             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,\n","             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,\n","             warm_start=False)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"tYDUcffedmiJ","colab_type":"text"},"source":["#### 4.10) Linear Model: Perceptron\n","----\n"]},{"cell_type":"code","metadata":{"id":"5VnTO0yLdtkM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":118},"executionInfo":{"status":"ok","timestamp":1564038633891,"user_tz":-420,"elapsed":734,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"151f489a-5b0f-46ae-d221-424f59d20194"},"source":["from sklearn.linear_model import Perceptron\n","\n","percep = Perceptron(tol=1e-3, random_state=0)\n","percep.fit(X_train,Y_train)\n","\n","acc_percep = round(percep.score(X_train, Y_train) * 100, 2)\n","\n","print(\"Độ chính xác của mô hình Perceptron trên tập Train: \",acc_percep)\n","print(\"Các tham số của Model Linear - Perceptron:\\n\",percep)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Độ chính xác của mô hình Perceptron trên tập Train:  79.35\n","Các tham số của Model Linear - Perceptron:\n"," Perceptron(alpha=0.0001, class_weight=None, early_stopping=False, eta0=1.0,\n","           fit_intercept=True, max_iter=1000, n_iter_no_change=5, n_jobs=None,\n","           penalty=None, random_state=0, shuffle=True, tol=0.001,\n","           validation_fraction=0.1, verbose=0, warm_start=False)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qvtZLm3yVTkr","colab_type":"text"},"source":["### 5) Tổng hợp kết quả của các Model\n","----\n"]},{"cell_type":"code","metadata":{"id":"yr_O3bAaVYlb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":314},"executionInfo":{"status":"ok","timestamp":1564038766323,"user_tz":-420,"elapsed":889,"user":{"displayName":"Nam Đặng Văn","photoUrl":"https://lh4.googleusercontent.com/-q45F9MZvab8/AAAAAAAAAAI/AAAAAAAAHtk/ktmJIo27Z0Y/s64/photo.jpg","userId":"08158656345609809641"}},"outputId":"d05e4f4c-f409-4aa1-d323-eafe32974e63"},"source":["#thống kê độ chính xác của các Model:\n","\n","models = pd.DataFrame({\n","    'Model': ['Support Vector Machines', 'KNN', 'Logistic Regression', \n","              'Random Forest', 'Naive Bayes',\n","              'Decision Tree', 'SGDClassifier','SGDRegressor','Perceptron' ],\n","    'Score (%)': [acc_svc, acc_knn, acc_log, \n","              acc_random_forest, acc_gaussian, acc_decision_tree,acc_sgdc,acc_sgdr,acc_percep],\n","    'Parameter':[svc,knn,logreg,random_forest,gaussian,decision_tree,sgdc,sgdr,percep]})\n","\n","models.sort_values(by='Score (%)', ascending=False)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Score (%)</th>\n","      <th>Parameter</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>Random Forest</td>\n","      <td>86.64</td>\n","      <td>(DecisionTreeClassifier(class_weight=None, cri...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Decision Tree</td>\n","      <td>86.64</td>\n","      <td>DecisionTreeClassifier(class_weight=None, crit...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>KNN</td>\n","      <td>84.06</td>\n","      <td>KNeighborsClassifier(algorithm='ball_tree', le...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Support Vector Machines</td>\n","      <td>83.50</td>\n","      <td>SVC(C=1.0, cache_size=200, class_weight=None, ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Logistic Regression</td>\n","      <td>81.48</td>\n","      <td>LogisticRegression(C=1.0, class_weight=None, d...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Perceptron</td>\n","      <td>79.35</td>\n","      <td>Perceptron(alpha=0.0001, class_weight=None, ea...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Naive Bayes</td>\n","      <td>76.88</td>\n","      <td>GaussianNB(priors=None, var_smoothing=1e-09)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>SGDClassifier</td>\n","      <td>71.16</td>\n","      <td>SGDClassifier(alpha=0.0001, average=False, cla...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>SGDRegressor</td>\n","      <td>37.58</td>\n","      <td>SGDRegressor(alpha=0.0001, average=False, earl...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                     Model  ...                                          Parameter\n","3            Random Forest  ...  (DecisionTreeClassifier(class_weight=None, cri...\n","5            Decision Tree  ...  DecisionTreeClassifier(class_weight=None, crit...\n","1                      KNN  ...  KNeighborsClassifier(algorithm='ball_tree', le...\n","0  Support Vector Machines  ...  SVC(C=1.0, cache_size=200, class_weight=None, ...\n","2      Logistic Regression  ...  LogisticRegression(C=1.0, class_weight=None, d...\n","8               Perceptron  ...  Perceptron(alpha=0.0001, class_weight=None, ea...\n","4              Naive Bayes  ...       GaussianNB(priors=None, var_smoothing=1e-09)\n","6            SGDClassifier  ...  SGDClassifier(alpha=0.0001, average=False, cla...\n","7             SGDRegressor  ...  SGDRegressor(alpha=0.0001, average=False, earl...\n","\n","[9 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":31}]}]}